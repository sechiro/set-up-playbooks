---
# tasks file for openvpn
- name: Install Openvpn
  sudo: yes
  apt:
    update_cache: yes
    package:
        - openvpn
        - easy-rsa
    state: present
  tags:
    - install

- name: Allow ipv4 forward
  sudo: yes
  replace:
    dest: /etc/sysctl.conf
    regexp: '^#net.ipv4.ip_forward=1$'
    replace: 'net.ipv4.ip_forward=1'
    validate: '/sbin/sysctl --load=%s'

- name: copy package config
  sudo: yes
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf
    mode: 0600

- name: copy easyrsa
  sudo: yes
  command: cp -r /usr/share/easy-rsa/ /etc/openvpn/
  args:
    creates: /etc/openvpn/easy-rsa

- name: Create keys directory
  sudo: yes
  file:
   state: directory
   dest: /etc/openvpn/easy-rsa/keys

- name: Create dh key
  sudo: yes
  command: openssl dhparam -out /etc/openvpn/dh2048.pem 2048
  args:
    creates: /etc/openvpn/dh2048.pem

- name: Build CA
  sudo: yes
  shell: |
    . ./vars;
    ./pkitool --initca;
    ./pkitool --server server;
  args:
    creates: keys/ca.key
    chdir: /etc/openvpn/easy-rsa

- name: copy keys
  sudo: yes
  command: bash -c 'cp /etc/openvpn/easy-rsa/keys/{server.crt,server.key,ca.crt} /etc/openvpn'
  args:
    creates: /etc/openvpn/ca.crt

- name: openvpn start
  sudo: yes
  service:
    name: openvpn
    state: started
    enabled: yes

- name: Build Client key
  sudo: yes
  shell: |
    . ./vars;
    ./pkitool {{ openvpn.clientname }};
  args:
    creates: keys/{{ openvpn.clientname }}.key
    chdir: /etc/openvpn/easy-rsa

- name: gather client keys
  sudo: yes
  shell: |
    cp /etc/openvpn/easy-rsa/keys/{{ openvpn.clientname}}.crt /tmp;
    cp /etc/openvpn/easy-rsa/keys/{{ openvpn.clientname}}.key /tmp && chmod 644 /tmp/{{ openvpn.clientname }}.key;
    cp /etc/openvpn/easy-rsa/keys/ca.crt /tmp;

- name: create client config
  template:
    src: client.conf.j2
    dest: /tmp/{{ openvpn.clientname }}.conf
